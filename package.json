{
  "name": "procedural-guidance-tool",
  "displayName": "Procedural Guidance Tool",
  "description": "A tool to support students through procedural programming guidance",
  "categories": [
    "Education", "Linters", "Testing", "Other"
  ],
  "version": "1.0.0",
  "license": "SEE LICENSE IN LICENSE",
  "bugs": {
    "url": "https://github.com/NHLStenden-ISAL/Procedural-Programming-Guidance-Tool/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/NHLStenden-ISAL/Procedural-Programming-Guidance-Tool"
  },
  "homepage": "https://github.com/NHLStenden-ISAL/Procedural-Programming-Guidance-Tool/blob/main/README.md",
  "engines": {
    "vscode": "^1.63.0"
  },
  "activationEvents": [
    "onLanguage:java"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "procedural-guidance-tool.annotationviewer.open",
        "title": "Open Annotation Viewer"
      }
    ],
    "languages": [
      {
        "id": "pgt"
      }
    ],
    "grammars": [
      {
        "language": "pgt",
        "path": "./syntaxes/pgt.tmLanguage.json",
        "scopeName": "source.pgt",
        "injectTo": ["source.java"]
      }
    ],
    "configuration": {
      "title": "Procedural Guidance Tool",
      "properties": {
        "PGT.testGenerator.jUnit.outputDirectory": {
          "type": "string",
          "default": "./src/test/java",
          "title": "Output Directory",
          "description": "Specifies the folder in which to output generated test code.",
          "order": 0
        },
        "PGT.testGenerator.jUnit.usePackageDeclaration": {
          "type": "boolean",
          "default": true,
          "title": "Use Package Declaration",
          "description": "Specificies whether to use the package declaration to determine the folder structure. For example, when true, the package declaration 'com.example.mypackage' will output tests to '<outDir>/com/example/mypackage/<test>'). When set to false, test code is placed inside the root of 'outDir' instead.",
          "order": 1
        },
        "PGT.testGenerator.jUnit.confirmOverwrite": {
          "type": "boolean",
          "default": true,
          "title": "Confirm Overwrite",
          "description": "Specifies whether to ask before overwriting a file.",
          "order": 2
        },
        "PGT.testGenerator.jUnit.imports": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "org.junit.jupiter.api.Test"
          ],
          "title": "Imports",
          "description": "Specifies which imports to automatically add to the generated test code.",
          "order": 3
        },
        "PGT.testGenerator.jUnit.staticImports": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "org.junit.jupiter.api.Assertions.*"
          ],
          "title": "Static Imports",
          "description": "Specifies which static imports to automatically add to the generated test code.",
          "order": 4
        },
        "PGT.testGenerator.jUnit.insertSpaces": {
          "type": "boolean",
          "default": true,
          "title": "Insert Spaces",
          "description": "Specifies whether to use spaces instead of tabs to indent the generated test code.",
          "order": 5
        },
        "PGT.testGenerator.jUnit.tabSize": {
          "type": "integer",
          "default": 4,
          "title": "Tab Size",
          "description": "Specifies the amount of spaces to use to substitute tabs when 'Insert Spaces' is set to true.",
          "order": 6
        }
      }
    }
  },
  "scripts": {
    "antlr4": "antlr4ts -o ./parser/out -listener -visitor ./parser/src/PGTJavaLexer.g4 ./parser/src/PGTJavaParser.g4",
    "package": "npm install -g vsce && vsce package",
    "vscode:prepublish": "npm install && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.63.0",
    "@typescript-eslint/eslint-plugin": "^5.9.1",
    "@typescript-eslint/parser": "^5.9.1",
    "@vscode/test-electron": "^2.0.3",
    "antlr4ts-cli": "^0.5.0-alpha.4",
    "eslint": "^8.6.0",
    "glob": "^7.2.0",
    "mocha": "^9.1.3",
    "typescript": "^4.5.4"
  },
  "dependencies": {
    "antlr4ts": "^0.5.0-alpha.4"
  }
}
